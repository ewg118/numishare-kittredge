<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!-- test -->

<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
	<map:components>
		<!-- *********************************** -->
		<!-- Cocoon generators - file is default -->
		<!-- *********************************** -->
		<map:generators default="file">
			<map:generator label="content" logger="sitemap.generator.request" name="request" pool-max="16" src="org.apache.cocoon.generation.RequestGenerator"/>
			<map:generator name="request" src="org.apache.cocoon.generation.RequestGenerator">
				<map:parameter name="generate-attributes" value="true"/>
			</map:generator>
			<map:generator name="search" src="org.apache.cocoon.components.search.LuceneCocoonSearcher" index="index"> </map:generator>
		</map:generators>
		<!-- ************************************* -->
		<!-- Cocoon transformers - xslt is default -->
		<!-- ************************************* -->
		<map:transformers default="xslt">
			<!-- NOTE: This is the default XSLT processor. -->
			<map:transformer logger="sitemap.transformer.xslt" name="xslt" pool-max="32" src="org.apache.cocoon.transformation.TraxTransformer">
				<use-request-parameters>true</use-request-parameters>
				<use-session-parameters>true</use-session-parameters>
				<use-cookie-parameters>false</use-cookie-parameters>
				<xslt-processor-role>xalan</xslt-processor-role>
				<check-includes>true</check-includes>
			</map:transformer>
			<map:transformer name="index" logger="sitemap.transformer.luceneindextransformer" src="org.apache.cocoon.transformation.LuceneIndexTransformer"/>
			<map:transformer name="xinclude" src="org.apache.cocoon.transformation.XIncludeTransformer"/>
		</map:transformers>
		
		<map:serializers>
			<map:serializer name="kml" mime-type="application/vnd.google-earth.kml+xml" src="org.apache.cocoon.serialization.XMLSerializer">
				<encoding>UTF-8</encoding>
			</map:serializer>
			<map:serializer name="csv" mime-type="text/csv" src="org.apache.cocoon.serialization.TextSerializer">
				<encoding>UTF-8</encoding>
			</map:serializer>
		</map:serializers>
	</map:components>

	<!-- =========================== Views =================================== -->

	<map:views>
		<map:view name="content" from-label="content">
			<map:serialize type="xml"/>
		</map:view>

		<map:view from-label="content" name="pretty-content">
			<map:transform src="context://stylesheets/system/xml2html.xslt"/>
			<map:serialize type="html"/>
		</map:view>

		<map:view name="links" from-position="last">
			<map:serialize type="links"/>
		</map:view>

		<map:view from-label="record" name="record">
			<map:serialize type="xml"/>
		</map:view>
		<map:view name="content" from-label="content">
			<map:serialize type="xml"/>
		</map:view>
		<map:view from-label="basiccontent" name="basiccontent">
			<map:serialize type="xml"/>
		</map:view>
	</map:views>

	<!-- =========================== Pipelines ================================= -->

	<map:pipelines>

		<map:component-configurations>
			<global-variables>
				<!-- static variables, referred to as generate calls in pipelines.  
					These only need to be changed if Solr and Orbeon are run on a different server or Tomcat application than Cocoon -->
				<solr-url>http://localhost:8080/solr/numishare-published/</solr-url>
				<exist-url>http://localhost:8080/orbeon/exist/rest/db/</exist-url>
				<collection-name>kittredge</collection-name>
			</global-variables>
		</map:component-configurations>
		
		<map:pipeline type="noncaching">
			<map:match pattern="display/*.solr">
				<map:generate src="{global:exist-url}{global:collection-name}/objects/{1}.xml"/>
				<map:transform src="xslt/display/nuds/solr.xsl" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>					
				</map:transform>
				<map:serialize type="xml"/>
			</map:match>
		</map:pipeline>

		<map:pipeline>
			<map:match pattern="**.css">
				<map:read src="css/{1}.css" mime-type="text/css"/>
			</map:match>
			
			<map:match pattern="**.ico">
				<map:read src="{1}.ico" mime-type="image/png"/>
			</map:match>

			<map:match pattern="**.jpg">
				<map:read src="{1}.jpg" mime-type="image/jpeg"/>
			</map:match>

			<map:match pattern="**.jpeg">
				<map:read src="{1}.jpeg" mime-type="image/jpeg"/>
			</map:match>

			<map:match pattern="**.jp2">
				<map:read src="{1}.jp2" mime-type="image/jp2"/>
			</map:match>

			<map:match pattern="**.gif">
				<map:read src="{1}.gif" mime-type="image/gif"/>
			</map:match>

			<map:match pattern="**.png">
				<map:read src="{1}.png" mime-type="image/png"/>
			</map:match>			

			<!-- allow javascript to pass through for script tags //-->
			<map:match pattern="**.js">
				<map:read src="{1}.js" mime-type="text/javascript"/>
			</map:match>

			<map:match pattern="">
				<map:generate src="{global:exist-url}{global:collection-name}/config.xml" label="record"/>
				<map:transform src="xslt/layout.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
					<map:parameter name="pipeline" value="index"/>
				</map:transform>
				<map:serialize type="html"/>
			</map:match>

			<!-- pages -->
			<map:match pattern="pages/*">
				<map:generate src="{global:exist-url}{global:collection-name}/config.xml" label="record"/>
				<map:transform src="xslt/layout.xsl" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>	
					<map:parameter name="pipeline" value="pages"/>					
					<map:parameter name="stub" value="{1}"/>
				</map:transform>
				<map:serialize type="html"/>
			</map:match>

			<!-- display objects -->
			<map:match pattern="display/*.xml">
				<map:generate src="{global:exist-url}{global:collection-name}/objects/{1}.xml" label="record"/>
				<map:serialize type="xml"/>
			</map:match>			
			
			<map:match pattern="display/*.atom">
				<map:aggregate element="content">
					<map:part src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+id:&#x022;{1}&#x022;&amp;rows=500&amp;fl=id,title_display,timestamp"/>
					<map:part src="{global:exist-url}{global:collection-name}/config.xml"/>
				</map:aggregate>				
				<map:transform src="xslt/linked_data/solr_to_atom.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
					<map:parameter name="id" value="{1}"/>
					<map:parameter name="section" value="display"/>					
				</map:transform>
				<map:serialize type="xml"/>
			</map:match>

			<map:match pattern="display/*.rdf">
				<map:generate src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+id:&#x022;{1}&#x022;&amp;rows=5000&amp;fl=id,title_display,date_display,origination_display,objectType_facet,source_meta,subject_facet"
					label="record"/>
				<map:transform src="xslt/linked_data/solr_to_rdf.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>					
				</map:transform>
				<map:serialize type="xml"/>
			</map:match>
			<map:match pattern="display/*.kml">
				<map:generate src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+id:&#x022;{1}&#x022;&amp;rows=1" label="record"/>
				<map:transform src="xslt/geographic/solr-to-kml.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>					
				</map:transform>
				<map:serialize type="kml"/>
			</map:match>
			
			<map:match pattern="display/*">
				<map:aggregate element="content">
					<map:part src="{global:exist-url}{global:collection-name}/objects/{1}.xml"/>
					<map:part src="cocoon:/query_mint_geo/{1}"/>
					<map:part src="cocoon:/query_findspot_geo/{1}"/>
					<map:part src="{global:exist-url}{global:collection-name}/config.xml"/>
				</map:aggregate>
				<map:transform src="xslt/layout.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>					
					<map:parameter name="solr-url" value="{global:solr-url}"/>
					<map:parameter name="pipeline" value="display"/>
				</map:transform>		
				<map:transform type="cinclude"/>				
				<map:serialize type="html"/>
			</map:match>

			<!-- linked data: global -->
			<map:match pattern="rdf">
				<map:redirect-to uri="rdf/"/>
			</map:match>

			<map:match pattern="rdf/">
				<map:aggregate element="content">
					<map:part src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:*:*}&amp;rows=5000&amp;fl=id,title_display,date_display,origination_display,objectType_facet,subject_facet"/>
					<map:part src="{global:exist-url}{global:collection-name}/config.xml"/>
				</map:aggregate>				
				<map:transform src="xslt/linked_data/solr_to_rdf.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>					
				</map:transform>
				<map:serialize type="xml"/>
			</map:match>

			<map:match pattern="feed">
				<map:redirect-to uri="feed/"/>
			</map:match>
			
			<map:match pattern="feed/">
				<map:aggregate element="content">
					<map:part src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q}}&amp;sort={url-encode:timestamp desc}&amp;rows=100&amp;start={request-param:start}"/>
					<map:part src="{global:exist-url}{global:collection-name}/config.xml"/>
				</map:aggregate>				
				<map:transform src="xslt/linked_data/solr_to_atom.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>					
				</map:transform>
				<map:serialize type="xml"/>
			</map:match>
			
			<!-- CSV -->
			<map:match pattern="data.csv">
				<map:aggregate element="content">
					<map:part src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q}}&amp;sort={url-encode:{request-param:sort}}&amp;rows=500"/>
					<map:part src="{global:exist-url}{global:collection-name}/config.xml"/>
				</map:aggregate>				
				<map:transform src="xslt/linked_data/solr_to_csv.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>					
				</map:transform>
				<map:serialize type="csv"/>
			</map:match>
			
			<!-- CHARTS AND GRAPHS -->
			<map:match pattern="visualize">
				<map:aggregate element="content">
					<map:part src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q}}&amp;rows=0&amp;facet.limit=1&amp;f.{request-param:category}.facet.limit={request-param:limit}&amp;facet.field=artist_facet&amp;facet.field=authority_facet&amp;facet.field=category_facet&amp;facet.field=collection_facet&amp;facet.field=decoration_facet&amp;facet.field=deity_facet&amp;facet.field=degree_facet&amp;facet.field=denomination_facet&amp;facet.field=department_facet&amp;facet.field=dynasty_facet&amp;facet.field=engraver_facet&amp;facet.field=era_facet&amp;facet.field=findspot_facet&amp;facet.field=grade_facet&amp;facet.field=institution_facet&amp;facet.field=issuer_facet&amp;facet.field=portrait_facet&amp;facet.field=manufacture_facet&amp;facet.field=maker_facet&amp;facet.field=material_facet&amp;facet.field=mint_facet&amp;facet.field=objectType_facet&amp;facet.field=owner_facet&amp;facet.field=region_facet&amp;facet.field=repository_facet&amp;facet.field=script_facet&amp;facet.field=series_facet&amp;facet.field=state_facet&amp;facet.field=subject_facet"/>
					<map:part src="{global:exist-url}{global:collection-name}/config.xml"/>
				</map:aggregate>				
				<map:transform type="xslt-saxon" src="xslt/layout.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>	
					<map:parameter name="pipeline" value="visualize"/>					
				</map:transform>
				<map:serialize type="html"/>
			</map:match>

			<!-- produces the search form; needs to be generated as xml and serialized as xhtml -->
			<map:match pattern="search">
				<map:generate src="{global:exist-url}{global:collection-name}/config.xml" label="record"/>
				<map:transform type="xslt-saxon" src="xslt/layout.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>			
					<map:parameter name="pipeline" value="search"/>					
				</map:transform>
				<map:serialize type="html"/>
			</map:match>

			<map:match pattern="results">
				<map:aggregate element="content">
					<map:part src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q}}&amp;start={request-param:start}&amp;sort={url-encode:{request-param:sort}}&amp;facet.field=artist_facet&amp;facet.field=authority_facet&amp;facet.field=category_facet&amp;facet.field=collection_facet&amp;facet.field=decoration_facet&amp;facet.field=deity_facet&amp;facet.field=degree_facet&amp;facet.field=denomination_facet&amp;facet.field=department_facet&amp;facet.field=dynasty_facet&amp;facet.field=engraver_facet&amp;facet.field=era_facet&amp;facet.field=findspot_facet&amp;facet.field=grade_facet&amp;facet.field=institution_facet&amp;facet.field=issuer_facet&amp;facet.field=portrait_facet&amp;facet.field=manufacture_facet&amp;facet.field=maker_facet&amp;facet.field=material_facet&amp;facet.field=mint_facet&amp;facet.field=objectType_facet&amp;facet.field=owner_facet&amp;facet.field=region_facet&amp;facet.field=repository_facet&amp;facet.field=script_facet&amp;facet.field=series_facet&amp;facet.field=state_facet&amp;facet.field=subject_facet&amp;facet.field=mint_geo&amp;facet.numFacetTerms=1&amp;section={request-param:section}"/>
					<map:part src="{global:exist-url}{global:collection-name}/config.xml"/>
				</map:aggregate>				
				<map:transform type="xslt-saxon" src="xslt/layout.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>	
					<map:parameter name="pipeline" value="results"/>					
				</map:transform>
				<map:transform type="cinclude"/>
				<map:serialize type="html"/>
			</map:match>

			<!-- COMPARE PAGE -->
			<map:match pattern="compare">				
				<map:generate src="{global:exist-url}{global:collection-name}/config.xml" label="record"/>
				<map:transform type="xslt-saxon" src="xslt/layout.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>	
					<map:parameter name="pipeline" value="compare"/>					
				</map:transform>
				<map:serialize type="html"/>
			</map:match>
			
			<!-- GEOGRAPHIC SERVICE -->
			<map:match pattern="query.gml">
				<map:generate src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q} AND mint_geo:*}&amp;start={request-param:start}&amp;rows=500" label="record"/>
				<map:transform type="xslt-saxon" src="xslt/geographic/solr-to-gml.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="kml"/>
			</map:match>
			
			<map:match pattern="query.kml">
				<map:aggregate element="content">
					<map:part src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q} AND mint_geo:*}&amp;start={request-param:start}&amp;rows=500"/>
					<map:part src="{global:exist-url}{global:collection-name}/config.xml"/>
				</map:aggregate>				
				<map:transform type="xslt-saxon" src="xslt/geographic/solr-to-kml.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>					
				</map:transform>
				<map:serialize type="kml"/>
			</map:match>
			
			<map:match pattern="mints.kml">
				<map:aggregate element="content">
					<map:part src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q} AND mint_geo:*}&amp;start={request-param:start}&amp;rows=0&amp;facet.limit=-1&amp;facet.field=mint_geo"/>
					<map:part src="{global:exist-url}{global:collection-name}/config.xml"/>
				</map:aggregate>				
				<map:transform type="xslt-saxon" src="xslt/geographic/mints-to-kml.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>					
				</map:transform>
				<map:serialize type="kml"/>
			</map:match>
			
			<map:match pattern="findspots.kml">
				<map:aggregate element="content">
					<map:part src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q} AND {request-param:field}:*}&amp;start={request-param:start}&amp;rows=0&amp;facet.limit=-1&amp;facet.field={url-encode:{request-param:field}}"/>
					<map:part src="{global:exist-url}{global:collection-name}/config.xml"/>
				</map:aggregate>				
				<map:transform type="xslt-saxon" src="xslt/geographic/findspots-to-kml.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>					
				</map:transform>
				<map:serialize type="xml"/>
			</map:match>
			
			<map:match pattern="maps">
				<map:aggregate element="content">
					<map:part src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:mint_geo:*}"/>
					<map:part src="{global:exist-url}{global:collection-name}/config.xml"/>
				</map:aggregate>				
				<map:transform type="xslt-saxon" src="xslt/layout.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>	
					<map:parameter name="pipeline" value="maps"/>					
				</map:transform>
				<map:transform type="cinclude"/>
				<map:serialize type="html"/>
			</map:match>

			<!-- AJAX COMPONENTS -->
			<!-- get the number of documents in the solr index that have images -->
			<map:match pattern="feature_count">
				<map:generate src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:imagesavailable:true}&amp;facet.limit=1" label="record"/>
				<map:transform src="xslt/ajax/get_feature_count.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="text"/>
			</map:match>

			<!-- features for index page -->
			<map:match pattern="get_feature">
				<map:aggregate element="content">
					<map:part src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:imagesavailable:true}&amp;start={request-param:seed}&amp;rows=1"/>
					<map:part src="{global:exist-url}{global:collection-name}/config.xml"/>
				</map:aggregate>				
				<map:transform src="xslt/ajax/get_feature.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>					
				</map:transform>
				<map:serialize type="html"/>
			</map:match>			

			<map:match pattern="results_ajax">
				<map:generate src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q}}&amp;rows=24&amp;start={request-param:start}&amp;sort={url-encode:{request-param:sort}}" label="record"/>
				<map:transform type="xslt-saxon" src="xslt/ajax/results_ajax.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>					
				</map:transform>
				<map:serialize type="html"/>
			</map:match>			
			
			<!-- compare page -->
			<map:match pattern="display_ajax/*">
				<map:aggregate element="content">
					<map:part src="{global:exist-url}{global:collection-name}/objects/{1}.xml"/>
					<map:part src="{global:exist-url}{global:collection-name}/config.xml"/>
				</map:aggregate>
				<map:transform src="xslt/ajax/display_ajax.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>					
					<map:parameter name="solr-url" value="{global:solr-url}"/>
					<map:parameter name="pipeline" value="display"/>					
				</map:transform>
				<map:serialize type="html"/>
			</map:match>
			
			<map:match pattern="compare_results">
				<map:aggregate element="content">
					<map:part src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q} AND imagesavailable:true}&amp;sort={url-encode:{request-param:sort}}&amp;start={url-encode:{request-param:start}}&amp;image={url-encode:{request-param:image}}&amp;mode={request-param:mode}"/>
					<map:part src="{global:exist-url}{global:collection-name}/config.xml"/>
				</map:aggregate>				
				<map:transform type="xslt-saxon" src="xslt/ajax/compare_results.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>					
				</map:transform>
				<map:serialize type="html"/>
			</map:match>

			<map:match pattern="get_map_checkbox">
				<map:generate src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q}}&amp;start=0&amp;rows=1" label="record"/>
				<map:transform src="xslt/ajax/get_map_checkbox.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="xhtml"/>
			</map:match>

			<map:match pattern="get_department_checkbox">
				<map:generate src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+mint_geo:*&amp;rows=0&amp;facet.field=department_facet" label="record"/>
				<map:transform src="xslt/ajax/get_department_checkbox.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="xhtml"/>
			</map:match>

			<map:match pattern="get_facet_options">
				<map:generate
					src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q}}&amp;category={request-param:category}&amp;facet.field={request-param:category}&amp;facet.sort={request-param:sort}&amp;facet.limit={request-param:limit}&amp;rows=0&amp;facet.mincount={request-param:mincount}"
					label="record"/>
				<map:transform type="xslt-saxon" src="xslt/ajax/get_facet_options.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="html"/>
			</map:match>

			<map:match pattern="get_categories">
				<map:generate
					src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q}}&amp;facet.sort=index&amp;rows=0&amp;facet.field=category_facet&amp;fq=collection-name:{global:collection-name}+AND+{url-encode:category_facet:{request-param:fq}}&amp;facet.prefix={url-encode:{request-param:prefix}}&amp;link={url-encode:{request-param:link}}&amp;section={request-param:section}&amp;mode={request-param:mode}"
					label="record"/>
				<map:transform type="xslt-saxon" src="xslt/ajax/get_categories.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>
					<map:parameter name="solr-url" value="{global:solr-url}"/>
				</map:transform>
				<map:transform type="cinclude"/>
				<map:serialize type="html"/>
			</map:match>

			<map:match pattern="get_search_facets">
				<map:generate
					src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q}}&amp;category={request-param:category}&amp;facet.field={request-param:category}&amp;facet.limit=-1&amp;facet.sort=index&amp;rows=0"
					label="record"/>
				<map:transform type="xslt-saxon" src="xslt/ajax/get_search_facets.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>					
				</map:transform>
				<map:serialize type="html"/>
			</map:match>

			<!-- maps section ajax -->
			<map:match pattern="maps_get_facets">
				<map:generate
					src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q} AND mint_geo:[* TO *]}&amp;category={request-param:category}&amp;facet.field={request-param:category}&amp;facet.sort={request-param:sort}&amp;f.{request-param:category}.facet.offset={request-param:offset}&amp;facet.limit={request-param:limit}&amp;rows=0"
					label="record"/>
				<map:transform type="xslt-saxon" src="xslt/ajax/get_facets.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>					
					<map:parameter name="solr-url" value="{global:solr-url}"/>
				</map:transform>
				<map:serialize type="html"/>
			</map:match>

			<map:match pattern="maps_remove_facets">
				<map:generate src="xml/empty.xml" label="record"/>
				<map:transform type="xslt-saxon" src="xslt/ajax/map_remove_facets.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="html"/>
			</map:match>

			<map:match pattern="maps_update_filters">
				<map:generate
					src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q} AND mint_geo:[* TO *]}&amp;start={request-param:start}&amp;rows=0&amp;facet.field=artist_facet&amp;facet.field=authority_facet&amp;facet.field=category_facet&amp;facet.field=collection_facet&amp;facet.field=decoration_facet&amp;facet.field=deity_facet&amp;facet.field=degree_facet&amp;facet.field=denomination_facet&amp;facet.field=department_facet&amp;facet.field=dynasty_facet&amp;facet.field=engraver_facet&amp;facet.field=era_facet&amp;facet.field=findspot_facet&amp;facet.field=grade_facet&amp;facet.field=institution_facet&amp;facet.field=issuer_facet&amp;facet.field=portrait_facet&amp;facet.field=manufacture_facet&amp;facet.field=maker_facet&amp;facet.field=material_facet&amp;facet.field=mint_facet&amp;facet.field=objectType_facet&amp;facet.field=owner_facet&amp;facet.field=region_facet&amp;facet.field=repository_facet&amp;facet.field=script_facet&amp;facet.field=series_facet&amp;facet.field=state_facet&amp;facet.field=subject_facet&amp;facet.numFacetTerms=1"
					label="record"/>
				<map:transform type="xslt-saxon" src="xslt/ajax/map_update_filters.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="html"/>
			</map:match>
			
			<!-- for quantitative analysis -->
			<map:match pattern="get_avg_weight">
				<map:generate
					src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:{request-param:q}}&amp;facet=true&amp;facet.field=ao_weight&amp;rows=0"
					label="record"/>
				<map:transform type="xslt-saxon" src="xslt/ajax/get_avg_weight.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="text"/>
			</map:match>
			
			<!-- not AJAX, but xsl:document() querying -->
			<!-- query solr for available geographic coordinates -->
			<map:match pattern="query_findspot_geo/*">
				<map:generate
					src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:id:&#x022;{1}&#x022; AND (findspot_geo:* OR ao_findspot_geo:*)}"
					label="record"/>
				<map:transform type="xslt-saxon" src="xslt/ajax/query_geo.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>
					<map:parameter name="field" value="findspot"/>
				</map:transform>
				<map:serialize type="xml"/>
			</map:match>
			
			<map:match pattern="query_mint_geo/*">
				<map:generate
					src="{global:solr-url}select?q=collection-name:{global:collection-name}+AND+{url-encode:id:&#x022;{1}&#x022; AND mint_geo:*}"
					label="record"/>
				<map:transform type="xslt-saxon" src="xslt/ajax/query_geo.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>
					<map:parameter name="field" value="mint"/>
				</map:transform>
				<map:serialize type="xml"/>
			</map:match>
		</map:pipeline>
	</map:pipelines>
</map:sitemap>
